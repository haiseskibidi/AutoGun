"""
–¢—Ä–∏–≥–≥–µ—Ä-–±–æ—Ç - –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —Å—Ç—Ä–µ–ª—å–±–∞ –ø—Ä–∏ –Ω–∞–≤–µ–¥–µ–Ω–∏–∏ –Ω–∞ –≤—Ä–∞–≥–∞
"""

import time
import random
from loguru import logger

try:
    import win32api
    import win32con
    import win32gui
    WIN32_AVAILABLE = True
except ImportError:
    WIN32_AVAILABLE = False
    logger.warning("pywin32 –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ: pip install pywin32")


class TriggerBot:
    """–¢—Ä–∏–≥–≥–µ—Ä-–±–æ—Ç –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π —Å—Ç—Ä–µ–ª—å–±—ã"""
    
    def __init__(self, memory_reader):
        """
        –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ç—Ä–∏–≥–≥–µ—Ä-–±–æ—Ç–∞
        
        Args:
            memory_reader: –≠–∫–∑–µ–º–ø–ª—è—Ä MemoryReader
        """
        if not WIN32_AVAILABLE:
            raise ImportError("pywin32 –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!")
        
        self.memory_reader = memory_reader
        self.enabled = False
        self.game_hwnd = None  # HWND –æ–∫–Ω–∞ –∏–≥—Ä—ã
        
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∏
        self.reaction_delay_min = 0.05  # –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ —Ä–µ–∞–∫—Ü–∏–∏ (—Å–µ–∫)
        self.reaction_delay_max = 0.15  # –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ —Ä–µ–∞–∫—Ü–∏–∏ (—Å–µ–∫)
        self.shot_duration = 0.05       # –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –Ω–∞–∂–∞—Ç–∏—è –õ–ö–ú (—Å–µ–∫)
        
        # –°–æ—Å—Ç–æ—è–Ω–∏–µ
        self.last_state = False  # –ë—ã–ª –ª–∏ –≤—Ä–∞–≥ –≤ –ø—Ä–æ—à–ª–æ–º –∫–∞–¥—Ä–µ
        self.is_holding = False  # –ó–∞–∂–∞—Ç–∞ –ª–∏ –∫–Ω–æ–ø–∫–∞ –º—ã—à–∏
        self.first_check = True  # –§–ª–∞–≥ –ø–µ—Ä–≤–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏ (–¥–ª—è debug –ª–æ–≥–∞)
        
        logger.info("TriggerBot –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
    
    def enable(self):
        """–í–∫–ª—é—á–∏—Ç—å —Ç—Ä–∏–≥–≥–µ—Ä-–±–æ—Ç"""
        # –ò—â–µ–º –æ–∫–Ω–æ –∏–≥—Ä—ã
        self.game_hwnd = win32gui.FindWindow(None, "Pixel Gun 3D")
        
        if not self.game_hwnd:
            # –ü—Ä–æ–±—É–µ–º –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–µ –Ω–∞–∑–≤–∞–Ω–∏—è
            self.game_hwnd = win32gui.FindWindow(None, "Pixel Gun 3D - Unity")
        
        if not self.game_hwnd:
            logger.error("‚ùå –û–∫–Ω–æ –∏–≥—Ä—ã –Ω–µ –Ω–∞–π–¥–µ–Ω–æ!")
            return False
        
        self.enabled = True
        logger.info(f"‚úÖ –¢—Ä–∏–≥–≥–µ—Ä-–±–æ—Ç –í–ö–õ–Æ–ß–ï–ù (HWND: {self.game_hwnd})")
        return True
    
    def disable(self):
        """–í—ã–∫–ª—é—á–∏—Ç—å —Ç—Ä–∏–≥–≥–µ—Ä-–±–æ—Ç"""
        # –û—Ç–ø—É—Å–∫–∞–µ–º –∫–Ω–æ–ø–∫—É –µ—Å–ª–∏ –±—ã–ª–∞ –∑–∞–∂–∞—Ç–∞
        if self.is_holding:
            self._release_mouse()
        
        self.enabled = False
        logger.info("‚è∏ –¢—Ä–∏–≥–≥–µ—Ä-–±–æ—Ç –í–´–ö–õ–Æ–ß–ï–ù")
    
    def set_reaction_delay(self, min_ms: int, max_ms: int):
        """
        –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–∞–¥–µ—Ä–∂–∫—É —Ä–µ–∞–∫—Ü–∏–∏
        
        Args:
            min_ms: –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ (–º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥—ã)
            max_ms: –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ (–º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥—ã)
        """
        self.reaction_delay_min = min_ms / 1000.0
        self.reaction_delay_max = max_ms / 1000.0
        logger.info(f"–ó–∞–¥–µ—Ä–∂–∫–∞ —Ä–µ–∞–∫—Ü–∏–∏: {min_ms}-{max_ms} –º—Å")
    
    def update(self):
        """–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç—Ä–∏–≥–≥–µ—Ä-–±–æ—Ç–∞ (–≤—ã–∑—ã–≤–∞—Ç—å –≤ –æ—Å–Ω–æ–≤–Ω–æ–º —Ü–∏–∫–ª–µ)"""
        if not self.enabled:
            return
        
        try:
            # –ü—Ä–∏ –ø–µ—Ä–≤–æ–π –ø—Ä–æ–≤–µ—Ä–∫–µ - –≤—ã–≤–æ–¥–∏–º –¥–µ—Ç–∞–ª—å–Ω—ã–π –ª–æ–≥
            debug_mode = self.first_check
            if self.first_check:
                logger.info("[TRIGGER] üîç –ü–µ—Ä–≤–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ - –≤–∫–ª—é—á–∞–µ–º –¥–µ—Ç–∞–ª—å–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ")
                self.first_check = False
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–≤–µ–¥—ë–Ω –ª–∏ –ø—Ä–∏—Ü–µ–ª –Ω–∞ –≤—Ä–∞–≥–∞
            is_on_enemy = self.memory_reader.read_crosshair_on_enemy(debug_mode=debug_mode)
            
            # –õ–æ–≥–∏—Ä—É–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è
            if is_on_enemy != self.last_state:
                if is_on_enemy:
                    logger.info(f"[TRIGGER] üéØ –¶–µ–ª—å –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∞ - –ó–ê–ñ–ò–ú–ê–ï–ú")
                else:
                    logger.info(f"[TRIGGER] –¶–µ–ª—å –ø–æ—Ç–µ—Ä—è–Ω–∞ - –æ—Ç–ø—É—Å–∫–∞–µ–º")
            
            # –ó–∞–∂–∏–º–∞–µ–º –∫–Ω–æ–ø–∫—É –µ—Å–ª–∏ –ø—Ä–∏—Ü–µ–ª –Ω–∞ –≤—Ä–∞–≥–µ
            if is_on_enemy and not self.is_holding:
                self._press_mouse()
            # –û—Ç–ø—É—Å–∫–∞–µ–º –µ—Å–ª–∏ —É—à–ª–∏ —Å –≤—Ä–∞–≥–∞
            elif not is_on_enemy and self.is_holding:
                self._release_mouse()
            
            self.last_state = is_on_enemy
            
        except Exception as e:
            logger.error(f"[TRIGGER] –û—à–∏–±–∫–∞: {e}")
    
    def _press_mouse(self):
        """–ó–∞–∂–∞—Ç—å –ª–µ–≤—É—é –∫–Ω–æ–ø–∫—É –º—ã—à–∏"""
        try:
            if not self.game_hwnd or not win32gui.IsWindow(self.game_hwnd):
                self.game_hwnd = win32gui.FindWindow(None, "Pixel Gun 3D")
                if not self.game_hwnd:
                    return
            
            # –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ —Ä–µ–∞–∫—Ü–∏–∏
            reaction_delay = random.uniform(self.reaction_delay_min, self.reaction_delay_max)
            time.sleep(reaction_delay)
            
            # –ü–æ–ª—É—á–∞–µ–º —Ü–µ–Ω—Ç—Ä –æ–∫–Ω–∞
            rect = win32gui.GetClientRect(self.game_hwnd)
            center_x = rect[2] // 2
            center_y = rect[3] // 2
            lParam = win32api.MAKELONG(center_x, center_y)
            
            # –ó–∞–∂–∏–º–∞–µ–º –õ–ö–ú
            win32api.PostMessage(
                self.game_hwnd,
                win32con.WM_LBUTTONDOWN,
                win32con.MK_LBUTTON,
                lParam
            )
            
            self.is_holding = True
            logger.debug(f"[TRIGGER] –ó–∞–∂–∞–ª–∏ –õ–ö–ú (–∑–∞–¥–µ—Ä–∂–∫–∞: {reaction_delay*1000:.0f}–º—Å)")
            
        except Exception as e:
            logger.error(f"[TRIGGER] –û—à–∏–±–∫–∞ –∑–∞–∂–∞—Ç–∏—è: {e}")
    
    def _release_mouse(self):
        """–û—Ç–ø—É—Å—Ç–∏—Ç—å –ª–µ–≤—É—é –∫–Ω–æ–ø–∫—É –º—ã—à–∏"""
        try:
            if not self.game_hwnd or not win32gui.IsWindow(self.game_hwnd):
                return
            
            # –ü–æ–ª—É—á–∞–µ–º —Ü–µ–Ω—Ç—Ä –æ–∫–Ω–∞
            rect = win32gui.GetClientRect(self.game_hwnd)
            center_x = rect[2] // 2
            center_y = rect[3] // 2
            lParam = win32api.MAKELONG(center_x, center_y)
            
            # –û—Ç–ø—É—Å–∫–∞–µ–º –õ–ö–ú
            win32api.PostMessage(
                self.game_hwnd,
                win32con.WM_LBUTTONUP,
                0,
                lParam
            )
            
            self.is_holding = False
            logger.debug(f"[TRIGGER] –û—Ç–ø—É—Å—Ç–∏–ª–∏ –õ–ö–ú")
            
        except Exception as e:
            logger.error(f"[TRIGGER] –û—à–∏–±–∫–∞ –æ—Ç–ø—É—Å–∫–∞–Ω–∏—è: {e}")
    
    def get_status(self) -> str:
        """–ü–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç—É—Å —Ç—Ä–∏–≥–≥–µ—Ä-–±–æ—Ç–∞"""
        if not self.enabled:
            return "–í—ã–∫–ª—é—á–µ–Ω"
        
        return f"–ê–∫—Ç–∏–≤–µ–Ω (–∑–∞–¥–µ—Ä–∂–∫–∞: {self.reaction_delay_min*1000:.0f}-{self.reaction_delay_max*1000:.0f} –º—Å)"
