"""
–û–∫–Ω–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–ª–∞–≤–∏—à –¥–ª—è —Å–º–µ–Ω—ã –æ—Ä—É–∂–∏—è
"""

from PyQt6.QtWidgets import (QDialog, QVBoxLayout, QHBoxLayout, QLabel, 
                             QPushButton, QFrame, QLineEdit, QMessageBox)
from PyQt6.QtCore import Qt
from PyQt6.QtGui import QFont, QKeyEvent
from loguru import logger


class KeyBindingEdit(QLineEdit):
    """–ü–æ–ª–µ –≤–≤–æ–¥–∞ –¥–ª—è –∫–ª–∞–≤–∏—à–∏ (–ø–µ—Ä–µ—Ö–≤–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏—è)"""
    
    def __init__(self, parent=None):
        super().__init__(parent)
        self.setReadOnly(True)
        self.setAlignment(Qt.AlignmentFlag.AlignCenter)
        self.setStyleSheet("""
            QLineEdit {
                background-color: #2a2a2a;
                border: 2px solid #444;
                border-radius: 3px;
                padding: 5px;
                color: #4CAF50;
                font-weight: bold;
                font-size: 12px;
            }
            QLineEdit:focus {
                border: 2px solid #4CAF50;
            }
        """)
        self.setPlaceholderText("–ù–∞–∂–º–∏—Ç–µ –∫–ª–∞–≤–∏—à—É...")
        self.setFixedWidth(100)
    
    def keyPressEvent(self, event: QKeyEvent):
        """–ü–µ—Ä–µ—Ö–≤–∞—Ç—ã–≤–∞–µ–º –Ω–∞–∂–∞—Ç–∏–µ –∫–ª–∞–≤–∏—à–∏"""
        key = event.key()
        
        # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º —Å–ª—É–∂–µ–±–Ω—ã–µ –∫–ª–∞–≤–∏—à–∏
        if key in (Qt.Key.Key_Escape, Qt.Key.Key_Tab, Qt.Key.Key_Backtab):
            super().keyPressEvent(event)
            return
        
        # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—Å—Ç–æ–≤–æ–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –∫–ª–∞–≤–∏—à–∏
        key_text = event.text()
        
        # –î–ª—è —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã—Ö –∫–ª–∞–≤–∏—à –∏—Å–ø–æ–ª—å–∑—É–µ–º –∏—Ö –∏–º–µ–Ω–∞
        if not key_text or key_text.isprintable() == False:
            key_name = {
                Qt.Key.Key_Space: 'space',
                Qt.Key.Key_Return: 'enter',
                Qt.Key.Key_Backspace: 'backspace',
                Qt.Key.Key_Delete: 'delete',
                Qt.Key.Key_Insert: 'insert',
                Qt.Key.Key_Home: 'home',
                Qt.Key.Key_End: 'end',
                Qt.Key.Key_PageUp: 'page up',
                Qt.Key.Key_PageDown: 'page down',
                Qt.Key.Key_Up: 'up',
                Qt.Key.Key_Down: 'down',
                Qt.Key.Key_Left: 'left',
                Qt.Key.Key_Right: 'right',
                Qt.Key.Key_F1: 'f1',
                Qt.Key.Key_F2: 'f2',
                Qt.Key.Key_F3: 'f3',
                Qt.Key.Key_F4: 'f4',
                Qt.Key.Key_F5: 'f5',
                Qt.Key.Key_F6: 'f6',
                Qt.Key.Key_F7: 'f7',
                Qt.Key.Key_F8: 'f8',
                Qt.Key.Key_F9: 'f9',
                Qt.Key.Key_F10: 'f10',
                Qt.Key.Key_F11: 'f11',
                Qt.Key.Key_F12: 'f12',
                Qt.Key.Key_Shift: 'shift',
                Qt.Key.Key_Control: 'ctrl',
                Qt.Key.Key_Alt: 'alt',
            }.get(key, None)
            
            if key_name:
                key_text = key_name
            else:
                return
        
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–µ–∫—Å—Ç –∫–ª–∞–≤–∏—à–∏
        self.setText(key_text.lower())
        logger.debug(f"–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –∫–ª–∞–≤–∏—à–∞: {key_text}")


class KeybindingsWindow(QDialog):
    """–û–∫–Ω–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–ª–∞–≤–∏—à —Å–º–µ–Ω—ã –æ—Ä—É–∂–∏—è"""
    
    def __init__(self, parent, config_manager):
        super().__init__(parent)
        self.config = config_manager
        self.key_edits = {}  # {slot_id: KeyBindingEdit}
        
        self._init_ui()
        self._load_keybindings()
        
        logger.info("–û–∫–Ω–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–ª–∞–≤–∏—à –æ—Ç–∫—Ä—ã—Ç–æ")
    
    def _init_ui(self):
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è UI"""
        self.setWindowTitle("‚å®Ô∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–ª–∞–≤–∏—à –æ—Ä—É–∂–∏—è")
        self.setModal(True)
        self.setFixedWidth(400)
        
        layout = QVBoxLayout()
        layout.setSpacing(10)
        self.setLayout(layout)
        
        # –ó–∞–≥–æ–ª–æ–≤–æ–∫
        title = QLabel("‚å®Ô∏è –ö–ª–∞–≤–∏—à–∏ —Å–º–µ–Ω—ã –æ—Ä—É–∂–∏—è")
        title_font = QFont()
        title_font.setPointSize(12)
        title_font.setBold(True)
        title.setFont(title_font)
        title.setAlignment(Qt.AlignmentFlag.AlignCenter)
        title.setStyleSheet("color: #4CAF50; padding: 10px;")
        layout.addWidget(title)
        
        # –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è
        instruction = QLabel("–ö–ª–∏–∫–Ω–∏—Ç–µ –Ω–∞ –ø–æ–ª–µ –∏ –Ω–∞–∂–º–∏—Ç–µ –Ω—É–∂–Ω—É—é –∫–ª–∞–≤–∏—à—É")
        instruction.setStyleSheet("color: #888; font-size: 10px;")
        instruction.setAlignment(Qt.AlignmentFlag.AlignCenter)
        layout.addWidget(instruction)
        
        # –§—Ä–µ–π–º —Å –∫–ª–∞–≤–∏—à–∞–º–∏
        keys_frame = QFrame()
        keys_frame.setStyleSheet("background-color: #252525; border-radius: 5px;")
        keys_layout = QVBoxLayout()
        keys_layout.setSpacing(8)
        keys_layout.setContentsMargins(15, 15, 15, 15)
        keys_frame.setLayout(keys_layout)
        
        # –°–ª–æ—Ç—ã –æ—Ä—É–∂–∏—è
        weapons = [
            (1, "1. –û—Å–Ω–æ–≤–Ω–æ–µ", "#4CAF50"),
            (2, "2. –ü–∏—Å—Ç–æ–ª–µ—Ç", "#2196F3"),
            (3, "3. –•–æ–ª–æ–¥–Ω–æ–µ (–Ω–æ–∂)", "#FF9800"),
            (4, "4. –°–ø–µ—Ü–∏–∞–ª—å–Ω–æ–µ", "#9C27B0"),
            (5, "5. –°–Ω–∞–π–ø–µ—Ä–∫–∞", "#00BCD4"),
            (6, "6. –¢—è–∂—ë–ª–æ–µ", "#F44336")
        ]
        
        for slot_id, name, color in weapons:
            row = QHBoxLayout()
            row.setSpacing(10)
            
            # –ù–∞–∑–≤–∞–Ω–∏–µ —Å–ª–æ—Ç–∞
            label = QLabel(name)
            label.setStyleSheet(f"color: {color}; font-weight: bold;")
            label.setFixedWidth(150)
            row.addWidget(label)
            
            # –ü–æ–ª–µ –≤–≤–æ–¥–∞ –∫–ª–∞–≤–∏—à–∏
            key_edit = KeyBindingEdit()
            self.key_edits[slot_id] = key_edit
            row.addWidget(key_edit)
            
            row.addStretch()
            
            keys_layout.addLayout(row)
        
        layout.addWidget(keys_frame)
        
        # –ö–Ω–æ–ø–∫–∏ –≤–Ω–∏–∑—É
        buttons_layout = QHBoxLayout()
        buttons_layout.setSpacing(10)
        
        # –ö–Ω–æ–ø–∫–∞ —Å–±—Ä–æ—Å–∞
        reset_button = QPushButton("üîÑ –°–±—Ä–æ—Å–∏—Ç—å –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é")
        reset_button.setStyleSheet("""
            QPushButton {
                background-color: #FF9800;
                color: white;
                padding: 8px 15px;
                border: none;
                border-radius: 3px;
                font-weight: bold;
            }
            QPushButton:hover { background-color: #F57C00; }
        """)
        reset_button.clicked.connect(self._reset_to_defaults)
        buttons_layout.addWidget(reset_button)
        
        buttons_layout.addStretch()
        
        # –ö–Ω–æ–ø–∫–∞ –æ—Ç–º–µ–Ω—ã
        cancel_button = QPushButton("‚úñ –û—Ç–º–µ–Ω–∞")
        cancel_button.setStyleSheet("""
            QPushButton {
                background-color: #666;
                color: white;
                padding: 8px 15px;
                border: none;
                border-radius: 3px;
                font-weight: bold;
            }
            QPushButton:hover { background-color: #555; }
        """)
        cancel_button.clicked.connect(self.reject)
        buttons_layout.addWidget(cancel_button)
        
        # –ö–Ω–æ–ø–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
        save_button = QPushButton("‚úî –°–æ—Ö—Ä–∞–Ω–∏—Ç—å")
        save_button.setStyleSheet("""
            QPushButton {
                background-color: #4CAF50;
                color: white;
                padding: 8px 15px;
                border: none;
                border-radius: 3px;
                font-weight: bold;
            }
            QPushButton:hover { background-color: #45a049; }
        """)
        save_button.clicked.connect(self._save_keybindings)
        buttons_layout.addWidget(save_button)
        
        layout.addLayout(buttons_layout)
        
        # –¢—ë–º–Ω–∞—è —Ç–µ–º–∞
        self.setStyleSheet("""
            QDialog {
                background-color: #1e1e1e;
                color: #ffffff;
            }
        """)
    
    def _load_keybindings(self):
        """–ó–∞–≥—Ä—É–∑–∏—Ç—å —Ç–µ–∫—É—â–∏–µ –∫–ª–∞–≤–∏—à–∏ –∏–∑ –∫–æ–Ω—Ñ–∏–≥–∞"""
        for slot_id in range(1, 7):
            key = self.config.get(f'keybindings.weapon_slot_{slot_id}', str(slot_id))
            self.key_edits[slot_id].setText(key)
            logger.debug(f"–ó–∞–≥—Ä—É–∂–µ–Ω–∞ –∫–ª–∞–≤–∏—à–∞ –¥–ª—è —Å–ª–æ—Ç–∞ {slot_id}: {key}")
    
    def _save_keybindings(self):
        """–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∫–ª–∞–≤–∏—à–∏ –≤ –∫–æ–Ω—Ñ–∏–≥"""
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ –¥—É–±–ª–∏–∫–∞—Ç—ã
        keys = {}
        for slot_id, edit in self.key_edits.items():
            key = edit.text().strip()
            if not key:
                QMessageBox.warning(self, "–û—à–∏–±–∫–∞", f"–ù–µ —É–∫–∞–∑–∞–Ω–∞ –∫–ª–∞–≤–∏—à–∞ –¥–ª—è —Å–ª–æ—Ç–∞ {slot_id}!")
                return
            
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥—É–±–ª–∏–∫–∞—Ç–æ–≤
            if key in keys.values():
                QMessageBox.warning(self, "–û—à–∏–±–∫–∞", f"–ö–ª–∞–≤–∏—à–∞ '{key}' —É–∂–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è!")
                return
            
            keys[slot_id] = key
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –∫–æ–Ω—Ñ–∏–≥
        for slot_id, key in keys.items():
            self.config.set(f'keybindings.weapon_slot_{slot_id}', key)
            logger.info(f"–°–ª–æ—Ç {slot_id}: –∫–ª–∞–≤–∏—à–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –Ω–∞ '{key}'")
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–æ–Ω—Ñ–∏–≥ –≤ —Ñ–∞–π–ª
        self.config.save_user_config()
        
        QMessageBox.information(self, "–£—Å–ø–µ—Ö", "–ö–ª–∞–≤–∏—à–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã!")
        self.accept()
    
    def _reset_to_defaults(self):
        """–°–±—Ä–æ—Å–∏—Ç—å –∫–ª–∞–≤–∏—à–∏ –∫ –∑–Ω–∞—á–µ–Ω–∏—è–º –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é"""
        reply = QMessageBox.question(
            self,
            "–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ",
            "–í–µ—Ä–Ω—É—Ç—å –∫–ª–∞–≤–∏—à–∏ –∫ –∑–Ω–∞—á–µ–Ω–∏—è–º –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é (1-6)?",
            QMessageBox.StandardButton.Yes | QMessageBox.StandardButton.No
        )
        
        if reply == QMessageBox.StandardButton.Yes:
            for slot_id in range(1, 7):
                self.key_edits[slot_id].setText(str(slot_id))
            logger.info("–ö–ª–∞–≤–∏—à–∏ —Å–±—Ä–æ—à–µ–Ω—ã –∫ –∑–Ω–∞—á–µ–Ω–∏—è–º –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é")

