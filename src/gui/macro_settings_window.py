"""
–û–∫–Ω–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –º–∞–∫—Ä–æ—Å–æ–≤ - –ø—Ä–µ—Å–µ—Ç—ã —Å –ø—Ä–∞–≤–∏–ª–∞–º–∏ —Å–≤–∞–ø–∞
"""

from PyQt6.QtWidgets import (QDialog, QVBoxLayout, QHBoxLayout, QPushButton, 
                             QLabel, QListWidget, QComboBox, QLineEdit, QGroupBox,
                             QMessageBox, QListWidgetItem, QWidget, QFrame, QCheckBox, QSpinBox)
from PyQt6.QtCore import Qt
from PyQt6.QtGui import QFont
from loguru import logger


class SwapRule(QFrame):
    """–û–¥–Ω–æ –ø—Ä–∞–≤–∏–ª–æ —Å–≤–∞–ø–∞"""
    
    def __init__(self, rule_data=None, on_delete=None):
        super().__init__()
        self.on_delete = on_delete
        
        self.setStyleSheet("""
            QFrame {
                background-color: #2a2a2a;
                border: 1px solid #444;
                border-radius: 3px;
                padding: 5px;
            }
        """)
        
        layout = QHBoxLayout()
        layout.setContentsMargins(5, 5, 5, 5)
        self.setLayout(layout)
        
        # –£—Å–ª–æ–≤–∏–µ: –ò–∑
        layout.addWidget(QLabel("–ò–∑:"))
        
        self.from_weapon = QComboBox()
        self.from_weapon.addItems([
            "1. –û—Å–Ω–æ–≤–Ω–æ–µ",
            "2. –ü–∏—Å—Ç–æ–ª–µ—Ç",
            "3. –•–æ–ª–æ–¥–Ω–æ–µ",
            "4. –°–ø–µ—Ü–∏–∞–ª—å–Ω–æ–µ",
            "5. –°–Ω–∞–π–ø–µ—Ä–∫–∞",
            "6. –¢—è–∂—ë–ª–æ–µ"
        ])
        layout.addWidget(self.from_weapon)
        
        # –°—Ç—Ä–µ–ª–∫–∞
        layout.addWidget(QLabel("‚Üí"))
        
        # –î–µ–π—Å—Ç–≤–∏–µ
        self.to_weapon = QComboBox()
        self.to_weapon.addItems([
            "1. –û—Å–Ω–æ–≤–Ω–æ–µ",
            "2. –ü–∏—Å—Ç–æ–ª–µ—Ç",
            "3. –•–æ–ª–æ–¥–Ω–æ–µ",
            "4. –°–ø–µ—Ü–∏–∞–ª—å–Ω–æ–µ",
            "5. –°–Ω–∞–π–ø–µ—Ä–∫–∞",
            "6. –¢—è–∂—ë–ª–æ–µ"
        ])
        layout.addWidget(self.to_weapon)
        
        # –ì–∞–ª–æ—á–∫–∞: —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –µ—Å—Ç—å –ø–∞—Ç—Ä–æ–Ω—ã
        self.check_ammo = QCheckBox("–ï—Å–ª–∏ –µ—Å—Ç—å –ø–∞—Ç—Ä–æ–Ω—ã")
        self.check_ammo.setChecked(True)
        self.check_ammo.setStyleSheet("color: #888; font-size: 10px;")
        self.check_ammo.toggled.connect(self._on_check_ammo_toggled)
        layout.addWidget(self.check_ammo)
        
        # Fallback –æ—Ä—É–∂–∏–µ (–ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ check_ammo –≤–∫–ª—é—á–µ–Ω–æ)
        self.fallback_label = QLabel("‚Üí –∏–Ω–∞—á–µ:")
        self.fallback_label.setStyleSheet("color: #888; font-size: 9px;")
        layout.addWidget(self.fallback_label)
        
        self.fallback_weapon = QComboBox()
        self.fallback_weapon.addItems([
            "‚Äî",  # –ù–µ—Ç fallback
            "1. –û—Å–Ω–æ–≤–Ω–æ–µ",
            "2. –ü–∏—Å—Ç–æ–ª–µ—Ç",
            "3. –•–æ–ª–æ–¥–Ω–æ–µ",
            "4. –°–ø–µ—Ü–∏–∞–ª—å–Ω–æ–µ",
            "5. –°–Ω–∞–π–ø–µ—Ä–∫–∞",
            "6. –¢—è–∂—ë–ª–æ–µ"
        ])
        self.fallback_weapon.setStyleSheet("font-size: 9px; padding: 2px;")
        self.fallback_weapon.setToolTip("–ó–∞–ø–∞—Å–Ω–æ–µ –æ—Ä—É–∂–∏–µ, –µ—Å–ª–∏ –≤ —Ü–µ–ª–µ–≤–æ–º –Ω–µ—Ç –ø–∞—Ç—Ä–æ–Ω–æ–≤")
        self.fallback_weapon.setFixedWidth(100)
        layout.addWidget(self.fallback_weapon)
        
        # –ì–∞–ª–æ—á–∫–∞: Quick Switch (–æ—Ç–º–µ–Ω–∞ –∞–Ω–∏–º–∞—Ü–∏–∏ —á–µ—Ä–µ–∑ –Ω–æ–∂)
        self.quick_switch = QCheckBox("üî™ Quick Switch")
        self.quick_switch.setChecked(False)
        self.quick_switch.setStyleSheet("color: #4CAF50; font-size: 10px; font-weight: bold;")
        self.quick_switch.setToolTip("–ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —á–µ—Ä–µ–∑ –Ω–æ–∂ –¥–ª—è –æ—Ç–º–µ–Ω—ã –∞–Ω–∏–º–∞—Ü–∏–∏ –¥–æ—Å—Ç–∞–≤–∞–Ω–∏—è –æ—Ä—É–∂–∏—è")
        layout.addWidget(self.quick_switch)
        
        # –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–π
        layout.addWidget(QLabel("–†–∞–∑:"))
        self.repeat_count = QSpinBox()
        self.repeat_count.setRange(1, 99)
        self.repeat_count.setValue(1)
        self.repeat_count.setFixedWidth(50)
        self.repeat_count.setStyleSheet("padding: 3px; background-color: #1e1e1e; border: 1px solid #444; border-radius: 2px;")
        self.repeat_count.setToolTip("–°–∫–æ–ª—å–∫–æ —Ä–∞–∑ –ø—Ä–∞–≤–∏–ª–æ —Å—Ä–∞–±–æ—Ç–∞–µ—Ç –ø–µ—Ä–µ–¥ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ–º –Ω–∞ —Å–ª–µ–¥—É—é—â–µ–µ")
        layout.addWidget(self.repeat_count)
        
        # –ö–Ω–æ–ø–∫–∞ —É–¥–∞–ª–∏—Ç—å
        delete_btn = QPushButton("‚úñ")
        delete_btn.setFixedWidth(30)
        delete_btn.setStyleSheet("""
            QPushButton {
                background-color: #f44336;
                color: white;
                border: none;
                border-radius: 2px;
                font-weight: bold;
            }
            QPushButton:hover { background-color: #da190b; }
        """)
        delete_btn.clicked.connect(self._on_delete_clicked)
        layout.addWidget(delete_btn)
        
        # –ó–∞–≥—Ä—É–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –µ—Å–ª–∏ –µ—Å—Ç—å
        if rule_data:
            self.from_weapon.setCurrentIndex(rule_data['from'] - 1)
            self.to_weapon.setCurrentIndex(rule_data['to'] - 1)
            self.check_ammo.setChecked(rule_data.get('check_ammo', True))
            self.quick_switch.setChecked(rule_data.get('quick_switch', False))
            self.repeat_count.setValue(rule_data.get('repeat_count', 1))
            
            # Fallback –æ—Ä—É–∂–∏–µ (0 = –Ω–µ—Ç fallback)
            fallback_to = rule_data.get('fallback_to', 0)
            self.fallback_weapon.setCurrentIndex(fallback_to)
        
        # –û–±–Ω–æ–≤–∏—Ç—å –≤–∏–¥–∏–º–æ—Å—Ç—å fallback –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
        self._on_check_ammo_toggled(self.check_ammo.isChecked())
    
    def _on_delete_clicked(self):
        if self.on_delete:
            self.on_delete(self)
    
    def _on_check_ammo_toggled(self, checked):
        """–ü–æ–∫–∞–∑–∞—Ç—å/—Å–∫—Ä—ã—Ç—å fallback –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç check_ammo"""
        self.fallback_label.setVisible(checked)
        self.fallback_weapon.setVisible(checked)
    
    def get_rule_data(self):
        """–ü–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –ø—Ä–∞–≤–∏–ª–∞"""
        rule = {
            'from': self.from_weapon.currentIndex() + 1,
            'to': self.to_weapon.currentIndex() + 1,
            'check_ammo': self.check_ammo.isChecked(),
            'quick_switch': self.quick_switch.isChecked(),
            'repeat_count': self.repeat_count.value()
        }
        
        # –î–æ–±–∞–≤–∏—Ç—å fallback —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –æ–Ω –≤—ã–±—Ä–∞–Ω (–Ω–µ "‚Äî")
        fallback_idx = self.fallback_weapon.currentIndex()
        if fallback_idx > 0:  # 0 = "‚Äî" (–Ω–µ—Ç fallback)
            rule['fallback_to'] = fallback_idx
        
        return rule


class MacroSettingsWindow(QDialog):
    """–û–∫–Ω–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –º–∞–∫—Ä–æ—Å–æ–≤"""
    
    def __init__(self, parent=None, config_manager=None):
        super().__init__(parent)
        self.config_manager = config_manager
        self.current_preset = None
        self.presets = self._load_presets()
        self.rule_widgets = []
        
        self._init_ui()
        self._load_preset_list()
        self._load_quick_switch_settings()
        
        logger.info("–û–∫–Ω–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –º–∞–∫—Ä–æ—Å–æ–≤ –æ—Ç–∫—Ä—ã—Ç–æ")
    
    def _init_ui(self):
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è UI"""
        self.setWindowTitle("–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –º–∞–∫—Ä–æ—Å–æ–≤")
        self.setGeometry(200, 200, 700, 500)
        self.setStyleSheet("""
            QDialog {
                background-color: #1e1e1e;
                color: #ffffff;
            }
        """)
        
        layout = QHBoxLayout()
        self.setLayout(layout)
        
        # –õ–µ–≤–∞—è –ø–∞–Ω–µ–ª—å - —Å–ø–∏—Å–æ–∫ –ø—Ä–µ—Å–µ—Ç–æ–≤
        left_panel = self._create_presets_panel()
        layout.addWidget(left_panel)
        
        # –ü—Ä–∞–≤–∞—è –ø–∞–Ω–µ–ª—å - –ø—Ä–∞–≤–∏–ª–∞ —Å–≤–∞–ø–∞
        right_panel = self._create_rules_panel()
        layout.addWidget(right_panel)
    
    def _create_presets_panel(self) -> QWidget:
        """–ü–∞–Ω–µ–ª—å —Å–æ —Å–ø–∏—Å–∫–æ–º –ø—Ä–µ—Å–µ—Ç–æ–≤"""
        widget = QWidget()
        widget.setFixedWidth(200)
        layout = QVBoxLayout()
        widget.setLayout(layout)
        
        # –ó–∞–≥–æ–ª–æ–≤–æ–∫
        title = QLabel("–ü—Ä–µ—Å–µ—Ç—ã")
        title_font = QFont()
        title_font.setPointSize(12)
        title_font.setBold(True)
        title.setFont(title_font)
        layout.addWidget(title)
        
        # –°–ø–∏—Å–æ–∫ –ø—Ä–µ—Å–µ—Ç–æ–≤
        self.presets_list = QListWidget()
        self.presets_list.setStyleSheet("""
            QListWidget {
                background-color: #2a2a2a;
                border: 1px solid #444;
                border-radius: 3px;
            }
            QListWidget::item {
                padding: 8px;
            }
            QListWidget::item:selected {
                background-color: #4CAF50;
            }
        """)
        self.presets_list.itemClicked.connect(self._on_preset_selected)
        layout.addWidget(self.presets_list)
        
        # –ö–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–µ—Å–µ—Ç–∞–º–∏
        btn_layout = QVBoxLayout()
        
        add_btn = QPushButton("‚ûï –ù–æ–≤—ã–π –ø—Ä–µ—Å–µ—Ç")
        add_btn.setStyleSheet("""
            QPushButton {
                background-color: #4CAF50;
                color: white;
                padding: 8px;
                border: none;
                border-radius: 3px;
                font-weight: bold;
            }
            QPushButton:hover { background-color: #45a049; }
        """)
        add_btn.clicked.connect(self._on_add_preset)
        btn_layout.addWidget(add_btn)
        
        rename_btn = QPushButton("‚úèÔ∏è –ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞—Ç—å")
        rename_btn.setStyleSheet("""
            QPushButton {
                background-color: #2196F3;
                color: white;
                padding: 8px;
                border: none;
                border-radius: 3px;
                font-weight: bold;
            }
            QPushButton:hover { background-color: #0b7dda; }
        """)
        rename_btn.clicked.connect(self._on_rename_preset)
        btn_layout.addWidget(rename_btn)
        
        delete_btn = QPushButton("üóëÔ∏è –£–¥–∞–ª–∏—Ç—å")
        delete_btn.setStyleSheet("""
            QPushButton {
                background-color: #f44336;
                color: white;
                padding: 8px;
                border: none;
                border-radius: 3px;
                font-weight: bold;
            }
            QPushButton:hover { background-color: #da190b; }
        """)
        delete_btn.clicked.connect(self._on_delete_preset)
        btn_layout.addWidget(delete_btn)
        
        layout.addLayout(btn_layout)
        
        return widget
    
    def _create_quick_switch_panel(self) -> QGroupBox:
        """–ü–∞–Ω–µ–ª—å –≥–ª–æ–±–∞–ª—å–Ω—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫ Quick Switch"""
        group = QGroupBox("üî™ Quick Switch - –≥–ª–æ–±–∞–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏")
        group.setStyleSheet("""
            QGroupBox {
                background-color: #2a2a2a;
                border: 2px solid #4CAF50;
                border-radius: 5px;
                margin-top: 10px;
                padding: 10px;
                font-weight: bold;
            }
            QGroupBox::title {
                color: #4CAF50;
                subcontrol-origin: margin;
                left: 10px;
                padding: 0 5px;
            }
        """)
        
        layout = QVBoxLayout()
        group.setLayout(layout)
        
        # –û–ø–∏—Å–∞–Ω–∏–µ
        desc = QLabel("üí° –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–∏–º–µ–Ω—è—é—Ç—Å—è –∫–æ –≤—Å–µ–º –ø—Ä–∞–≤–∏–ª–∞–º —Å –≥–∞–ª–æ—á–∫–æ–π \"üî™ Quick Switch\"")
        desc.setStyleSheet("color: #888; font-size: 9px; font-style: italic; margin-bottom: 5px;")
        desc.setWordWrap(True)
        layout.addWidget(desc)
        
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∏
        settings_layout = QHBoxLayout()
        
        # –°–ª–æ—Ç –Ω–æ–∂–∞
        settings_layout.addWidget(QLabel("–°–ª–æ—Ç –Ω–æ–∂–∞:"))
        self.qs_knife_slot = QSpinBox()
        self.qs_knife_slot.setRange(1, 6)
        self.qs_knife_slot.setValue(3)
        self.qs_knife_slot.setFixedWidth(60)
        self.qs_knife_slot.setStyleSheet("padding: 3px; background-color: #1e1e1e; border: 1px solid #444; border-radius: 2px;")
        self.qs_knife_slot.setToolTip("–ù–∞ –∫–∞–∫–æ–º —Å–ª–æ—Ç–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –Ω–æ–∂ (–æ–±—ã—á–Ω–æ 3)")
        settings_layout.addWidget(self.qs_knife_slot)
        
        settings_layout.addSpacing(20)
        
        # –ó–∞–¥–µ—Ä–∂–∫–∞
        settings_layout.addWidget(QLabel("–ó–∞–¥–µ—Ä–∂–∫–∞ (–º—Å):"))
        self.qs_delay = QSpinBox()
        self.qs_delay.setRange(30, 1000)
        # –ó–Ω–∞—á–µ–Ω–∏–µ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç—Å—è –≤ _load_quick_switch_settings() –∏–∑ –∫–æ–Ω—Ñ–∏–≥–∞
        self.qs_delay.setSingleStep(10)
        self.qs_delay.setFixedWidth(80)
        self.qs_delay.setStyleSheet("padding: 3px; background-color: #1e1e1e; border: 1px solid #444; border-radius: 2px;")
        self.qs_delay.setToolTip("–í—Ä–µ–º—è —É–¥–µ—Ä–∂–∞–Ω–∏—è –Ω–æ–∂–∞ –ø–µ—Ä–µ–¥ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ–º –Ω–∞ —Ü–µ–ª–µ–≤–æ–µ –æ—Ä—É–∂–∏–µ (50-100 –º—Å –æ–ø—Ç–∏–º–∞–ª—å–Ω–æ, –¥–æ 1000 –º—Å –µ—Å–ª–∏ –Ω—É–∂–Ω–æ)")
        settings_layout.addWidget(self.qs_delay)
        
        settings_layout.addStretch()
        layout.addLayout(settings_layout)
        
        return group
    
    def _create_rules_panel(self) -> QWidget:
        """–ü–∞–Ω–µ–ª—å —Å –ø—Ä–∞–≤–∏–ª–∞–º–∏ —Å–≤–∞–ø–∞"""
        widget = QWidget()
        layout = QVBoxLayout()
        widget.setLayout(layout)
        
        # –ó–∞–≥–æ–ª–æ–≤–æ–∫
        title = QLabel("–ü—Ä–∞–≤–∏–ª–∞ —Å–≤–∞–ø–∞")
        title_font = QFont()
        title_font.setPointSize(12)
        title_font.setBold(True)
        title.setFont(title_font)
        layout.addWidget(title)
        
        self.preset_name_label = QLabel("–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–µ—Å–µ—Ç")
        self.preset_name_label.setStyleSheet("color: #888; font-size: 10px;")
        layout.addWidget(self.preset_name_label)
        
        # –ë–ª–æ–∫ Quick Switch
        qs_group = self._create_quick_switch_panel()
        layout.addWidget(qs_group)
        
        # –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –ø—Ä–∞–≤–∏–ª
        self.rules_container = QWidget()
        self.rules_layout = QVBoxLayout()
        self.rules_layout.setSpacing(5)
        self.rules_container.setLayout(self.rules_layout)
        layout.addWidget(self.rules_container)
        
        layout.addStretch()
        
        # –ö–Ω–æ–ø–∫–∞ –¥–æ–±–∞–≤–∏—Ç—å –ø—Ä–∞–≤–∏–ª–æ
        add_rule_btn = QPushButton("‚ûï –î–æ–±–∞–≤–∏—Ç—å –ø—Ä–∞–≤–∏–ª–æ")
        add_rule_btn.setStyleSheet("""
            QPushButton {
                background-color: #4CAF50;
                color: white;
                padding: 10px;
                border: none;
                border-radius: 3px;
                font-weight: bold;
            }
            QPushButton:hover { background-color: #45a049; }
        """)
        add_rule_btn.clicked.connect(self._on_add_rule)
        layout.addWidget(add_rule_btn)
        
        # –ö–Ω–æ–ø–∫–∏ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å/–∑–∞–∫—Ä—ã—Ç—å
        bottom_layout = QHBoxLayout()
        
        save_btn = QPushButton("üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å")
        save_btn.setStyleSheet("""
            QPushButton {
                background-color: #2196F3;
                color: white;
                padding: 12px;
                border: none;
                border-radius: 3px;
                font-weight: bold;
            }
            QPushButton:hover { background-color: #0b7dda; }
        """)
        save_btn.clicked.connect(self._on_save)
        bottom_layout.addWidget(save_btn)
        
        close_btn = QPushButton("–ó–∞–∫—Ä—ã—Ç—å")
        close_btn.setStyleSheet("""
            QPushButton {
                background-color: #666;
                color: white;
                padding: 12px;
                border: none;
                border-radius: 3px;
                font-weight: bold;
            }
            QPushButton:hover { background-color: #555; }
        """)
        close_btn.clicked.connect(self.close)
        bottom_layout.addWidget(close_btn)
        
        layout.addLayout(bottom_layout)
        
        return widget
    
    def _load_presets(self) -> dict:
        """–ó–∞–≥—Ä—É–∑–∏—Ç—å –ø—Ä–µ—Å–µ—Ç—ã –∏–∑ –∫–æ–Ω—Ñ–∏–≥–∞"""
        presets = self.config_manager.get('macros.presets', {}) if self.config_manager else {}
        
        # –°–æ–∑–¥–∞—Ç—å –¥–µ—Ñ–æ–ª—Ç–Ω—ã–π –ø—Ä–µ—Å–µ—Ç –µ—Å–ª–∏ –Ω–µ—Ç
        if not presets:
            presets = {
                '–û—Å–Ω–æ–≤–Ω–æ–π': {
                    'rules': []
                }
            }
        
        return presets
    
    def _save_presets(self):
        """–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –ø—Ä–µ—Å–µ—Ç—ã –≤ –∫–æ–Ω—Ñ–∏–≥"""
        if self.config_manager:
            self.config_manager.set('macros.presets', self.presets)
            self.config_manager.save_user_config()
    
    def _load_quick_switch_settings(self):
        """–ó–∞–≥—Ä—É–∑–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Quick Switch –∏–∑ –∫–æ–Ω—Ñ–∏–≥–∞"""
        if self.config_manager:
            # –ß–∏—Ç–∞–µ–º –∏–∑ –∫–æ–Ω—Ñ–∏–≥–∞ (fallback –Ω–∞ –¥–µ—Ñ–æ–ª—Ç–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –∏–∑ default_config.yaml)
            knife_slot = self.config_manager.get('macros.knife_slot')
            delay_ms = self.config_manager.get('macros.quick_switch_delay')
            
            # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏—è –≤ GUI (–µ—Å–ª–∏ None, –æ—Å—Ç–∞–≤–ª—è–µ–º –∫–∞–∫ –µ—Å—Ç—å)
            if knife_slot is not None:
                self.qs_knife_slot.setValue(knife_slot)
            if delay_ms is not None:
                self.qs_delay.setValue(delay_ms)
    
    def _save_quick_switch_settings(self):
        """–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Quick Switch –≤ –∫–æ–Ω—Ñ–∏–≥"""
        if self.config_manager:
            self.config_manager.set('macros.knife_slot', self.qs_knife_slot.value())
            self.config_manager.set('macros.quick_switch_delay', self.qs_delay.value())
            self.config_manager.save_user_config()
    
    def _load_preset_list(self):
        """–ó–∞–≥—Ä—É–∑–∏—Ç—å —Å–ø–∏—Å–æ–∫ –ø—Ä–µ—Å–µ—Ç–æ–≤ –≤ UI"""
        self.presets_list.clear()
        for preset_name in self.presets.keys():
            self.presets_list.addItem(preset_name)
    
    def _on_preset_selected(self, item):
        """–í—ã–±—Ä–∞–Ω –ø—Ä–µ—Å–µ—Ç"""
        preset_name = item.text()
        self.current_preset = preset_name
        self.preset_name_label.setText(f"–ü—Ä–µ—Å–µ—Ç: {preset_name}")
        self._load_rules(preset_name)
    
    def _load_rules(self, preset_name: str):
        """–ó–∞–≥—Ä—É–∑–∏—Ç—å –ø—Ä–∞–≤–∏–ª–∞ –ø—Ä–µ—Å–µ—Ç–∞"""
        # –û—á–∏—Å—Ç–∏—Ç—å —Ç–µ–∫—É—â–∏–µ –ø—Ä–∞–≤–∏–ª–∞
        for widget in self.rule_widgets:
            widget.deleteLater()
        self.rule_widgets.clear()
        
        # –ó–∞–≥—Ä—É–∑–∏—Ç—å –ø—Ä–∞–≤–∏–ª–∞ –∏–∑ –ø—Ä–µ—Å–µ—Ç–∞
        if preset_name in self.presets:
            rules = self.presets[preset_name].get('rules', [])
            for rule_data in rules:
                self._add_rule_widget(rule_data)
    
    def _add_rule_widget(self, rule_data=None):
        """–î–æ–±–∞–≤–∏—Ç—å –≤–∏–¥–∂–µ—Ç –ø—Ä–∞–≤–∏–ª–∞"""
        rule_widget = SwapRule(rule_data, on_delete=self._on_delete_rule)
        self.rules_layout.addWidget(rule_widget)
        self.rule_widgets.append(rule_widget)
    
    def _on_add_rule(self):
        """–î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤–æ–µ –ø—Ä–∞–≤–∏–ª–æ"""
        if not self.current_preset:
            QMessageBox.warning(self, "–û—à–∏–±–∫–∞", "–°–Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–µ—Å–µ—Ç!")
            return
        
        self._add_rule_widget()
    
    def _on_delete_rule(self, rule_widget):
        """–£–¥–∞–ª–∏—Ç—å –ø—Ä–∞–≤–∏–ª–æ"""
        self.rules_layout.removeWidget(rule_widget)
        self.rule_widgets.remove(rule_widget)
        rule_widget.deleteLater()
    
    def _on_add_preset(self):
        """–î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–π –ø—Ä–µ—Å–µ—Ç"""
        from PyQt6.QtWidgets import QInputDialog
        
        name, ok = QInputDialog.getText(self, "–ù–æ–≤—ã–π –ø—Ä–µ—Å–µ—Ç", "–ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–µ—Å–µ—Ç–∞:")
        if ok and name:
            if name in self.presets:
                QMessageBox.warning(self, "–û—à–∏–±–∫–∞", "–ü—Ä–µ—Å–µ—Ç —Å —Ç–∞–∫–∏–º –∏–º–µ–Ω–µ–º —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç!")
                return
            
            self.presets[name] = {'rules': []}
            self._load_preset_list()
            logger.info(f"–°–æ–∑–¥–∞–Ω –Ω–æ–≤—ã–π –ø—Ä–µ—Å–µ—Ç: {name}")
    
    def _on_rename_preset(self):
        """–ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞—Ç—å –ø—Ä–µ—Å–µ—Ç"""
        if not self.current_preset:
            QMessageBox.warning(self, "–û—à–∏–±–∫–∞", "–°–Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–µ—Å–µ—Ç!")
            return
        
        from PyQt6.QtWidgets import QInputDialog
        
        new_name, ok = QInputDialog.getText(
            self, "–ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞—Ç—å", "–ù–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ:", 
            text=self.current_preset
        )
        
        if ok and new_name and new_name != self.current_preset:
            if new_name in self.presets:
                QMessageBox.warning(self, "–û—à–∏–±–∫–∞", "–ü—Ä–µ—Å–µ—Ç —Å —Ç–∞–∫–∏–º –∏–º–µ–Ω–µ–º —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç!")
                return
            
            self.presets[new_name] = self.presets.pop(self.current_preset)
            self.current_preset = new_name
            self._load_preset_list()
            logger.info(f"–ü—Ä–µ—Å–µ—Ç –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω: {new_name}")
    
    def _on_delete_preset(self):
        """–£–¥–∞–ª–∏—Ç—å –ø—Ä–µ—Å–µ—Ç"""
        if not self.current_preset:
            QMessageBox.warning(self, "–û—à–∏–±–∫–∞", "–°–Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–µ—Å–µ—Ç!")
            return
        
        reply = QMessageBox.question(
            self, "–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ",
            f"–£–¥–∞–ª–∏—Ç—å –ø—Ä–µ—Å–µ—Ç '{self.current_preset}'?",
            QMessageBox.StandardButton.Yes | QMessageBox.StandardButton.No
        )
        
        if reply == QMessageBox.StandardButton.Yes:
            del self.presets[self.current_preset]
            self.current_preset = None
            self._load_preset_list()
            
            # –û—á–∏—Å—Ç–∏—Ç—å –ø—Ä–∞–≤–∏–ª–∞
            for widget in self.rule_widgets:
                widget.deleteLater()
            self.rule_widgets.clear()
            
            self.preset_name_label.setText("–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–µ—Å–µ—Ç")
            logger.info("–ü—Ä–µ—Å–µ—Ç —É–¥–∞–ª—ë–Ω")
    
    def _on_save(self):
        """–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è"""
        # –°–æ—Ö—Ä–∞–Ω–∏—Ç—å Quick Switch –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ (–≤—Å–µ–≥–¥–∞)
        self._save_quick_switch_settings()
        
        # –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –ø—Ä–∞–≤–∏–ª–∞ —Ç–µ–∫—É—â–µ–≥–æ –ø—Ä–µ—Å–µ—Ç–∞ (–µ—Å–ª–∏ –≤—ã–±—Ä–∞–Ω)
        if self.current_preset:
            # –°–æ–±—Ä–∞—Ç—å –≤—Å–µ –ø—Ä–∞–≤–∏–ª–∞
            rules = []
            for rule_widget in self.rule_widgets:
                rules.append(rule_widget.get_rule_data())
            
            # –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤ –ø—Ä–µ—Å–µ—Ç
            self.presets[self.current_preset]['rules'] = rules
            self._save_presets()
            
            # –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º –ø—Ä–∞–≤–∏–ª–∞ —Å Quick Switch
            qs_count = sum(1 for r in rules if r.get('quick_switch', False))
            msg = f"–ü—Ä–µ—Å–µ—Ç '{self.current_preset}' —Å–æ—Ö—Ä–∞–Ω—ë–Ω ({len(rules)} –ø—Ä–∞–≤–∏–ª"
            if qs_count > 0:
                msg += f", {qs_count} —Å Quick Switch"
            msg += ")!"
            
            QMessageBox.information(self, "–£—Å–ø–µ—Ö", msg)
            logger.info(f"–ü—Ä–µ—Å–µ—Ç '{self.current_preset}' —Å–æ—Ö—Ä–∞–Ω—ë–Ω: {len(rules)} –ø—Ä–∞–≤–∏–ª, {qs_count} —Å Quick Switch")
        else:
            QMessageBox.information(self, "–£—Å–ø–µ—Ö", "–ì–ª–æ–±–∞–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Quick Switch —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã!")
            logger.info("–ì–ª–æ–±–∞–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Quick Switch —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã")

